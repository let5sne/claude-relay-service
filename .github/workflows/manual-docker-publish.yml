name: Manual Docker Publish

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Git tag to build (e.g. v1.1.133). Leave empty to use latest tag"
        required: false
        default: ""
      also_latest:
        description: "Also push the 'latest' tag"
        type: boolean
        required: false
        default: false

permissions:
  contents: read
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Resolve target tag
        id: resolve
        shell: bash
        run: |
          git fetch --tags --prune --force || true
          INPUT_TAG='${{ github.event.inputs.tag }}'
          if [ -z "$INPUT_TAG" ]; then
            LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
            if [ -z "$LATEST_TAG" ]; then
              echo "::error::No tags found in repository; please provide a tag"
              exit 1
            fi
            TAG="$LATEST_TAG"
          else
            TAG="$INPUT_TAG"
          fi
          # Validate tag exists
          if ! git rev-parse -q --verify "refs/tags/${TAG}" >/dev/null; then
            echo "::error::Tag ${TAG} not found."
            exit 1
          fi
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "Resolved tag: ${TAG}"

      - name: Checkout tag
        run: |
          git checkout "tags/${{ steps.resolve.outputs.tag }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME || 'let5see' }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME || 'let5see' }}/claude-relay-service:${{ steps.resolve.outputs.tag }}
            ${{ github.event.inputs.also_latest == 'true' && format('{0}/claude-relay-service:latest', secrets.DOCKERHUB_USERNAME || 'let5see') || '' }}
          labels: |
            org.opencontainers.image.version=${{ steps.resolve.outputs.tag }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Summary
        run: |
          echo "Published docker.io/${{ secrets.DOCKERHUB_USERNAME || 'let5see' }}/claude-relay-service:${{ steps.resolve.outputs.tag }}"
          if [ "${{ github.event.inputs.also_latest }}" = "true" ]; then
            echo "Also updated :latest tag"
          fi

